import type { PropType, ExtractPropTypes } from 'vue';
import type { LinkState } from './interface';
import type { HandleEvent, FightingType, FightingIcon, FightingTarget } from '../../_interface';
export declare const Props: {
    /**
     * link 的类型
     *
     * @values default primary success danger warning
     */
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined; /** 自定义颜色 */
    };
    /**
     * 链接的地址
     *
     * @see href https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a?qs=%3Ca%3E#attr-href
     */
    readonly href: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined; /** 自定义颜色 */
    };
    /** 的文字大小 */
    readonly size: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /**
     * 状态的样式状态
     *
     * @values line background
     */
    readonly state: {
        readonly type: PropType<LinkState>;
        readonly default: LinkState;
        readonly validator?: ((value: LinkState) => boolean) | undefined; /** 自定义颜色 */
    };
    /** 是否禁用 */
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 原生 target 属性
     *
     * @values _blank _self _parent _top
     * @default _self
     * @see target https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a#attr-target
     */
    readonly target: {
        readonly type: PropType<FightingTarget>;
        readonly default: FightingTarget;
        readonly validator?: ((value: FightingTarget) => boolean) | undefined; /** 自定义颜色 */
    };
    /** 自定义颜色 */
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined; /** 自定义颜色 */
    };
    /** 自定义移入状态颜色 */
    readonly hoverColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined; /** 自定义颜色 */
    };
    /** 是否禁止 copy */
    readonly noCopy: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否禁止链接跳转及重新加载（取消默认事件） */
    readonly noLink: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 之前的 icon */
    readonly beforeIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 之后的 icon */
    readonly afterIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 点击执行的回调 */
    readonly onClick: {
        readonly type: PropType<HandleEvent>;
        readonly default: HandleEvent | null;
    };
};
/** link 组件 props 类型 */
export type LinkProps = ExtractPropTypes<typeof Props>;
