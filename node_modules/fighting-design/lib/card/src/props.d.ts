import type { PropType, ExtractPropTypes } from 'vue';
import type { CardShadow, CardClose } from './interface';
export declare const Props: {
    /** 卡片标题 */
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否为圆角卡片 */
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 卡片内边距 */
    readonly padding: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /**
     * 阴影样式
     *
     * @values hover always
     */
    readonly shadow: {
        readonly type: PropType<CardShadow>;
        readonly default: CardShadow;
        readonly validator?: ((value: CardShadow) => boolean) | undefined;
    };
    /** 自定义边框颜色 */
    readonly borderColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义背景色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义标题颜色 */
    readonly titleColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 标题是否加粗 */
    readonly titleBold: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否可关闭 */
    readonly close: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 关闭之后的回调 */
    readonly onClose: {
        readonly type: PropType<CardClose>;
        readonly default: CardClose | null;
    };
};
/** card 组件 props 类型 */
export type CardProps = ExtractPropTypes<typeof Props>;
