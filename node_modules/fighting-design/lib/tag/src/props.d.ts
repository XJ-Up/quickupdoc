import type { PropType, ExtractPropTypes } from 'vue';
import type { HandleMouse, FightingType, FightingSize, FightingIcon } from '../../_interface';
export declare const Props: {
    /**
     * 标签类型
     *
     * @values default primary success danger warning info
     */
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    /** 是否可关闭 */
    readonly close: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否为圆角 */
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义背景色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义文字颜色 */
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 左侧 icon */
    readonly beforeIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 右侧 icon */
    readonly afterIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /**
     * 尺寸
     *
     * @values large middle small mini
     */
    readonly size: {
        readonly type: PropType<FightingSize>;
        readonly default: FightingSize;
        readonly validator?: ((value: FightingSize) => boolean) | undefined;
    };
    /** 是否为简约模式 */
    readonly simple: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否为块级元素 */
    readonly block: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 线性的 */
    readonly line: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 点击关闭按钮触发 */
    readonly onClose: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    /** 点击按钮触发 */
    readonly onClick: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
};
/** tag 组件 props 类型 */
export type TagProps = ExtractPropTypes<typeof Props>;
