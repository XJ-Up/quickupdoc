import type { PropType, ExtractPropTypes } from 'vue';
import type { HandleEvent, FightingSize, FightingIcon, FightingFit } from '../../_interface';
export declare const Props: {
    /** 图片路径 */
    readonly src: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 加载失败时要显示的地址 */
    readonly errSrc: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 图标头像 */
    readonly icon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /**
     *原生 alt 属性
     *
     * @see alt https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img#attr-alt
     */
    readonly alt: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否为圆角 */
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否懒加载头像 */
    readonly lazy: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 如何适应容器
     *
     * 原生样式属性
     *
     * @see object-fit https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit#try_it
     * @values fill contain cover none scale-down
     */
    readonly fit: {
        readonly type: PropType<FightingFit>;
        readonly default: FightingFit;
        readonly validator?: ((value: FightingFit) => boolean) | undefined;
    };
    /**
     * 头像大小
     *
     * 可传入字符串使用内置大小
     *
     * 也可以传入数字，数字将自动转换为 px 单位
     *
     * @values large middle small mini
     * @default middle
     */
    readonly size: {
        readonly type: PropType<number | FightingSize>;
        readonly default: () => FightingSize;
        readonly validator: (val: FightingSize | number) => boolean;
    };
    /** 自定义背景色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 字体大小 */
    readonly fontSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 字体的颜色 */
    readonly fontColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 文字头像 */
    readonly text: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 触发懒加载的距离 */
    readonly rootMargin: {
        readonly type: PropType<string | number>;
        readonly default: "100px" | undefined;
    };
    /** 图片加载成功触发的回调 */
    readonly onLoad: {
        readonly type: PropType<HandleEvent>;
        readonly default: HandleEvent | null;
    };
    /** 图片加载失败触发的回调 */
    readonly onError: {
        readonly type: PropType<HandleEvent>;
        readonly default: HandleEvent | null;
    };
};
/** avatar 组件 props 类型 */
export type AvatarProps = ExtractPropTypes<typeof Props>;
