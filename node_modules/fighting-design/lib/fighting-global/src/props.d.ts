import type { PropType, ExtractPropTypes,  InjectionKey } from 'vue';
import type { FightingSize, FightingType, FightingLang } from '../../_interface';
export declare const Props: {
    /**
     * 尺寸
     *
     * @values large middle small mini
     */
    readonly size: {
        readonly type: PropType<FightingSize>;
        readonly default: FightingSize;
        readonly validator?: ((value: FightingSize) => boolean) | undefined;
    };
    /**
     * 按钮的类型（非自定义按钮颜色时有效）
     *
     * @values default primary success danger warning info
     */
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    /**
     * 不同语言
     *
     * @values en-US zh-CN
     * @default zh-CN
     */
    readonly lang: {
        readonly type: PropType<FightingLang>;
        readonly default: FightingLang;
        readonly validator?: ((value: FightingLang) => boolean) | undefined;
    };
};
/** fighting-global 组件 props 类型 */
export type FightingGlobalProps = ExtractPropTypes<typeof Props>;
/** fighting-global 组件注入的依赖项 */
export declare const FIGHTING_GLOBAL_PROPS_KEY: InjectionKey<FightingGlobalProps>;
