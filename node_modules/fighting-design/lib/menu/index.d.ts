import type { MenuMode, MenuItemClick, SubmenuClick } from './src/interface';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import Menu from "./src/menu";
export declare const FMenu: Install<DefineComponent<{
    readonly mode: {
        readonly type: PropType<MenuMode>;
        readonly default: MenuMode;
        readonly validator?: ((value: MenuMode) => boolean) | undefined;
    };
    readonly activeName: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly onMenuItemClick: {
        readonly type: PropType<MenuItemClick>;
        readonly default: MenuItemClick | null;
    };
    readonly onSubmenuClick: {
        readonly type: PropType<SubmenuClick>;
        readonly default: SubmenuClick | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly mode: {
        readonly type: PropType<MenuMode>;
        readonly default: MenuMode;
        readonly validator?: ((value: MenuMode) => boolean) | undefined;
    };
    readonly activeName: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly onMenuItemClick: {
        readonly type: PropType<MenuItemClick>;
        readonly default: MenuItemClick | null;
    };
    readonly onSubmenuClick: {
        readonly type: PropType<SubmenuClick>;
        readonly default: SubmenuClick | null;
    };
}>>, {
    readonly mode: MenuMode;
    readonly activeName: string | number;
    readonly onMenuItemClick: MenuItemClick;
    readonly onSubmenuClick: SubmenuClick;
}, {}>>;
/** menu 组件实例类型 */
export type MenuInstance = InstanceType<typeof Menu>;
export * from './src/interface';
export default FMenu;
