import type { PropType, ExtractPropTypes } from 'vue';
import type { FightingIcon } from '../../_interface';
import type { DialogCallback } from './interface';
export declare const Props: {
    /** 绑定值，控制是否展示 */
    readonly visible: {
        readonly required: true;
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 标题文字内容 */
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否追加到 body */
    readonly appendToBody: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义宽度 */
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 是否全屏展示 */
    readonly fullscreen: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否展示遮罩层 */
    readonly showMask: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否点击遮罩层关闭 */
    readonly maskClose: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 遮罩层透明度 */
    readonly maskOpacity: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    /** 遮罩层背景色 */
    readonly maskBackground: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否展示头部 */
    readonly showHeader: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否模糊遮罩层 */
    readonly maskBlur: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否展示关闭图标 */
    readonly showCloseIcon: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义关闭按钮 icon */
    readonly closeIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /**
     * 层级 原生属性
     *
     * @see z-index https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index
     */
    readonly zIndex: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    /** 打开动画开始的回调 */
    readonly onOpen: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    /** 打开动画结束的回调 */
    readonly onOpenEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    /** 关闭动画开始的回调 */
    readonly onClose: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    /** 关闭动画结束的回调 */
    readonly onCloseEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
};
/** dialog 组件 props 类型 */
export type DialogProps = ExtractPropTypes<typeof Props>;
