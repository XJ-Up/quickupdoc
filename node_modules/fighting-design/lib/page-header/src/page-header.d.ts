import type { FightingIcon, HandleEvent } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    readonly icon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    readonly iconSize: {
        readonly type: PropType<string | number>;
        readonly default: "16px" | undefined;
    };
    readonly backText: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly titleBold: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly titleColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly titleCenter: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    }; /**
     * 点击之后执行
     *
     * @param { Object } evt 事件对象
     */
    readonly subtitle: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly onBack: {
        readonly type: PropType<HandleEvent>;
        readonly default: HandleEvent | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly icon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    readonly iconSize: {
        readonly type: PropType<string | number>;
        readonly default: "16px" | undefined;
    };
    readonly backText: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly titleBold: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly titleColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly titleCenter: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    }; /**
     * 点击之后执行
     *
     * @param { Object } evt 事件对象
     */
    readonly subtitle: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly onBack: {
        readonly type: PropType<HandleEvent>;
        readonly default: HandleEvent | null;
    };
}>>, {
    readonly title: string;
    readonly titleColor: string;
    readonly icon: FightingIcon;
    readonly titleBold: boolean;
    readonly iconSize: string | number;
    readonly backText: string;
    readonly titleCenter: boolean;
    readonly subtitle: string;
    readonly onBack: HandleEvent;
}, {}>;
export default _sfc_main;
