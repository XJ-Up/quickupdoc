import type { FightingType } from '..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import Ripple from "./src/ripple";
export declare const FRipple: Install<DefineComponent<{
    readonly ripplesColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly duration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly startOpacity: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly endOpacity: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly ripplesColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly duration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly startOpacity: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly endOpacity: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
}>>, {
    readonly type: FightingType;
    readonly duration: number;
    readonly disabled: boolean;
    readonly ripplesColor: string;
    readonly startOpacity: number;
    readonly endOpacity: number;
}, {}>>;
/** ripple 组件实例类型 */
export type RippleInstance = InstanceType<typeof Ripple>;
export * from './src/interface';
export default FRipple;
