import type { PropType, ExtractPropTypes,  InjectionKey } from 'vue';
import type { TabsTrigger, TabsModelValue, TabsPosition, TabsType, TabsJustifyContent, TabsSwitch, TabsProvide } from './interface';
export declare const Props: {
    /** 活跃的 name */
    readonly modelValue: {
        readonly type: PropType<string | number>;
        readonly default: TabsModelValue | undefined;
    };
    /**
     * 头部位置
     *
     * @values left right top bottom
     * @default top
     */
    readonly position: {
        readonly type: PropType<TabsPosition>;
        readonly default: TabsPosition;
        readonly validator?: ((value: TabsPosition) => boolean) | undefined;
    };
    /**
     * 样式风格
     *
     * @values line card segment
     * @default line
     */
    readonly type: {
        readonly type: PropType<TabsType>;
        readonly default: TabsType;
        readonly validator?: ((value: TabsType) => boolean) | undefined;
    };
    /**
     * 对齐方式
     *
     * @values flex-start center flex-end space-between space-around space-evenly
     * @see justify-content https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content
     */
    readonly justifyContent: {
        readonly type: PropType<TabsJustifyContent>;
        readonly default: TabsJustifyContent;
        readonly validator?: ((value: TabsJustifyContent) => boolean) | undefined;
    };
    /**
     * 触发方式
     *
     * @values click hover
     * @default click
     */
    readonly trigger: {
        readonly type: PropType<TabsTrigger>;
        readonly default: TabsTrigger;
        readonly validator?: ((value: TabsTrigger) => boolean) | undefined;
    };
    /** 切换前的回调 */
    readonly onSwitch: {
        readonly type: PropType<TabsSwitch>;
        readonly default: TabsSwitch | null;
    };
};
/** tabs 组件 props 类型 */
export type TabsProps = ExtractPropTypes<typeof Props>;
/** tabs 组件注入的依赖项 */
export declare const TABS_PROPS_KEY: InjectionKey<TabsProvide>;
