import type { DialogCallback } from '..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import CollapseAnimation from "./src/collapse-animation";
export declare const FCollapseAnimation: Install<DefineComponent<{
    readonly opened: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly heightAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly widthAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly animationTime: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly onOpen: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onClose: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onOpenEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onCloseEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly opened: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly heightAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly widthAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly animationTime: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly onOpen: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onClose: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onOpenEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onCloseEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
}>>, {
    readonly onClose: DialogCallback;
    readonly disabled: boolean;
    readonly onOpen: DialogCallback;
    readonly opened: boolean;
    readonly heightAnimation: boolean;
    readonly widthAnimation: boolean;
    readonly animationTime: number;
    readonly onOpenEnd: DialogCallback;
    readonly onCloseEnd: DialogCallback;
}, {}>>;
/** collapse-animation 组件实例类型 */
export type CollapseAnimationInstance = InstanceType<typeof CollapseAnimation>;
export * from './src/interface';
export default FCollapseAnimation;
