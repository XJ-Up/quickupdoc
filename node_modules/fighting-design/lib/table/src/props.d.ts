import type { PropType, ExtractPropTypes } from 'vue';
import type { TableAlign, TableData, TableColumns } from './interface';
export declare const Props: {
    /** 数据列表 */
    readonly data: {
        readonly type: PropType<TableData>;
        readonly default: () => TableData | null;
    };
    /** 标题数据 */
    readonly columns: {
        readonly type: PropType<TableColumns[]>;
        readonly default: () => TableColumns[] | null;
    };
    /**
     * 内容对齐方式
     *
     * @values left center right
     * @default left
     */
    readonly align: {
        readonly type: PropType<TableAlign>;
        readonly default: TableAlign;
        readonly validator?: ((value: TableAlign) => boolean) | undefined;
    };
    /** 是否显示边框 */
    readonly border: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否可选择 */
    readonly select: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否显示序号 */
    readonly num: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否显示斑马纹 */
    readonly zebra: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义斑马纹颜色 */
    readonly zebraColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义表格高度 */
    readonly height: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 自定义表格宽度 */
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 自定义背景颜色 */
    readonly bgColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义头部背景颜色 */
    readonly headBgColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否展示头部 */
    readonly showHead: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 切换选项触发的回调 */
    readonly onSelect: {
        readonly type: PropType<Function>;
        readonly default: Function | null;
    };
};
/** table 组件 props 类型 */
export type TableProps = ExtractPropTypes<typeof Props>;
