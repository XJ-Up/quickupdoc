"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});var f=require("vue"),h=require("../../_utils/get-children/index.js"),v=require("../../_utils/utils/index.js"),l=require("../../_utils/tips/index.js"),a=require("../../_utils/is/index.js");const x=c=>{const i=f.reactive({}),d=f.useSlots(),u=f.computed(()=>{if(!d.default)return[];const n=h.getChildren(d.default(),"FFormItem");return n.forEach(r=>{r.props&&r.props.name&&r.props.rules&&(i[r.props.name]=!1)}),n}),g=(n,r)=>{const s=e=>{if((e.max||e.min)&&!a.isNumber(n)&&!a.isString(n))return l.warning("f-form-item","Wrong parameter type to be detected"),!1;const t=(n+"").length;return!(e.required&&!n||e.max&&t>e.max||e.min&&t<e.min||e.regExp&&!e.regExp.test(n)||e.validator&&!e.validator())};if(a.isArray(r)){for(const e of r)if(!s(e))return e.message||!1}else if(a.isObject(r)&&!s(r))return r.message||!1;return!0};return{childrenCheckResult:i,validate:()=>{u.value.forEach(r=>{const s=r.props&&r.props.rules,e=r.props&&r.props.name;if(r.props&&s&&e&&c.model)if(e.includes(".")){const t=v.splitString(e,".");let o=c.model;if(t&&t.length){for(const p of t)if(o=o[p],!o){l.warning("f-form-item",`${e} is not a valid \`name\` parameter`);break}const m=g(o,s);i[e]=m}}else if(e in c.model){const t=c.model[e],o=g(t,s);i[e]=o}else l.warning("f-form-item",`${e} is not a valid \`name\` parameter`)});const n=Object.values(i);return n.length?n.every(r=>!!r&&!a.isString(r)):!0}}};exports.useFormCheck=x;
