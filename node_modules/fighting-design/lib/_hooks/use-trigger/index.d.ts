import type { TriggerProps } from '../../trigger';
import type { CSSProperties, Ref, ComputedRef } from 'vue';
import type { HandleMouse } from '../../_interface';
/**
 * useTrigger 返回值类型接口
 *
 * @param { Object } visible 是否展示主内容
 * @param { Object } styleList 主要内容坐标样式
 * @param { Function } close 关闭触发器
 * @param { Function } onBeforeEnter 在元素被插入到 DOM 之前被调用
 * @param { Function } onAfterLeave 在过度离开完成，移除 DOM 时调用
 */
export interface UseTriggerReturn {
    visible: Ref<boolean>;
    styleList: ComputedRef<CSSProperties>;
    close: HandleMouse;
    onBeforeEnter: (el: Element) => void;
    onAfterLeave: (el: Element) => void;
}
/**
 * 触发器组件方法封装
 *
 * @param { Object } prop prop 参数
 * @param { Object } node 内容节点元素
 * @returns { Object }
 */
export declare const useTrigger: (prop: TriggerProps, node: Ref<HTMLDivElement | undefined>) => UseTriggerReturn;
