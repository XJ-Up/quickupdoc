import type { ExtractPropTypes, InjectionKey, PropType } from 'vue';
import type { FightingSize, FightingFit } from '../../_interface';
export declare const Props: {
    /** 偏移距离 */
    readonly positionSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 是否为圆角 */
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 头像大小
     *
     * 可传入字符串使用内置大小
     *
     * 也可以传入数字，数字将自动转换为 px 单位
     *
     * @values large middle small mini
     * @default middle
     */
    readonly size: {
        readonly type: PropType<number | FightingSize>;
        readonly default: () => FightingSize;
        readonly validator: (val: FightingSize | number) => boolean;
    };
    /** 是否懒加载头像 */
    readonly lazy: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 如何适应容器
     *
     * 原生样式属性
     *
     * @see object-fit https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit#try_it
     * @values fill contain cover none scale-down
     */
    readonly fit: {
        readonly type: PropType<FightingFit>;
        readonly default: FightingFit;
        readonly validator?: ((value: FightingFit) => boolean) | undefined;
    };
};
/** avatar-group 组件 prop 类型 */
export type AvatarGroupProps = ExtractPropTypes<typeof Props>;
/** avatar-group 注入的依赖项 */
export declare const AVATAR_GROUP_PROPS_KEY: InjectionKey<AvatarGroupProps>;
