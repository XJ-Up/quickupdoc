import type { PropType, ExtractPropTypes } from 'vue';
import type { TooltipPosition, TooltipState } from './interface';
export declare const Props: {
    /** 提示内容 */
    readonly content: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /**
     * 弹出方向
     *
     * @values top bottom right left
     * @default bottom
     */
    readonly position: {
        readonly type: PropType<TooltipPosition>;
        readonly default: TooltipPosition;
        readonly validator?: ((value: TooltipPosition) => boolean) | undefined;
    };
    /** 是否禁用 */
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 展示状态
     *
     * @values hover active always
     * @default hover
     */
    readonly state: {
        readonly type: PropType<TooltipState>;
        readonly default: TooltipState;
        readonly validator?: ((value: TooltipState) => boolean) | undefined;
    };
    /** 是否显示箭头 */
    readonly noArrow: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否加粗文字 */
    readonly bold: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否使用浅色主题 */
    readonly bright: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义背景色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义文字颜色 */
    readonly fontColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
};
/** tooltip 组件 props 类型 */
export type TooltipProps = ExtractPropTypes<typeof Props>;
