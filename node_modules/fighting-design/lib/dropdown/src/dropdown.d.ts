import type { HandleChange } from '../..';
import type { TriggerTrigger } from '../../trigger';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    readonly spacing: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: () => null;
    };
    readonly trigger: {
        readonly type: PropType<TriggerTrigger>;
        readonly default: TriggerTrigger;
        readonly validator?: ((value: TriggerTrigger) => boolean) | undefined;
    };
    readonly arrow: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly enterDuration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly leaveDuration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly onChange: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    readonly onOpen: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    readonly onClose: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly spacing: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: () => null;
    };
    readonly trigger: {
        readonly type: PropType<TriggerTrigger>;
        readonly default: TriggerTrigger;
        readonly validator?: ((value: TriggerTrigger) => boolean) | undefined;
    };
    readonly arrow: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly enterDuration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly leaveDuration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly onChange: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    readonly onOpen: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    readonly onClose: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
}>>, {
    readonly onClose: HandleChange;
    readonly width: string | number;
    readonly disabled: boolean;
    readonly onChange: HandleChange;
    readonly spacing: string | number;
    readonly onOpen: HandleChange;
    readonly trigger: TriggerTrigger;
    readonly arrow: boolean;
    readonly enterDuration: number;
    readonly leaveDuration: number;
}, {}>;
export default _sfc_main;
