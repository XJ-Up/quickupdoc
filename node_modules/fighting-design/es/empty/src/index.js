import { defineComponent as u, computed as y, openBlock as t, createElementBlock as n, normalizeStyle as d, unref as o, createElementVNode as s, renderSlot as m, Fragment as g, createBlock as l, toDisplayString as S, createCommentVNode as _ } from "vue";
import { Props as k } from "./index3.js";
import { FSvgIcon as h } from "../../svg-icon/index.js";
import { FImage as v } from "../../image/index.js";
import z from "../../_svg/f-icon-full-sharp/index.js";
import { useGlobal as F } from "../../_hooks/use-global/index.js";
import { useList as $ } from "../../_hooks/use-list/index.js";
const w = { class: "f-empty__wrapper" }, B = { class: "f-empty__content" }, C = {
  key: 0,
  class: "f-empty__footer"
};
var P = /* @__PURE__ */ u({
  name: "FEmpty",
  __name: "empty",
  props: k,
  setup(a) {
    const r = a, { styles: c } = $(r, "empty"), { getLang: i } = F(), p = y(() => r.content || i("empty").value.content), f = c(["contentColor", "contentSize", "background"]);
    return (e, E) => (t(), n("div", {
      class: "f-empty",
      style: d(o(f))
    }, [
      s("div", w, [
        e.$slots.default ? m(e.$slots, "default", { key: 0 }) : (t(), n(g, { key: 1 }, [
          e.imageSrc ? (t(), l(o(v), {
            key: 0,
            src: e.imageSrc,
            width: e.imageSize
          }, null, 8, ["src", "width"])) : (t(), l(o(h), {
            key: 1,
            icon: o(z),
            size: e.iconSize
          }, null, 8, ["icon", "size"]))
        ], 64))
      ]),
      s("span", B, S(p.value), 1),
      e.$slots.footer ? (t(), n("div", C, [
        m(e.$slots, "footer")
      ])) : _("", !0)
    ], 4));
  }
});
export {
  P as default
};
