import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import Empty from "./src/empty";
export declare const FEmpty: Install<DefineComponent<{
    readonly content: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly contentSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly contentColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly imageSrc: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly imageSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly iconSize: {
        readonly type: PropType<string | number>;
        readonly default: 30 | undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly content: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly contentSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly contentColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly imageSrc: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly imageSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly iconSize: {
        readonly type: PropType<string | number>;
        readonly default: 30 | undefined;
    };
}>>, {
    readonly background: string;
    readonly content: string;
    readonly contentSize: string | number;
    readonly contentColor: string;
    readonly imageSrc: string;
    readonly imageSize: string | number;
    readonly iconSize: string | number;
}, {}>>;
/** empty 组件实例类型 */
export type EmptyInstance = InstanceType<typeof Empty>;
export * from './src/interface';
export default FEmpty;
