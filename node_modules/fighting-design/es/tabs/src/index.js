import { defineComponent as M, mergeModels as T, useModel as E, ref as P, shallowRef as x, getCurrentInstance as F, computed as _, provide as j, openBlock as r, createElementBlock as l, normalizeClass as z, unref as b, normalizeStyle as A, createElementVNode as f, renderSlot as m, createCommentVNode as h, Fragment as I, renderList as K, mergeProps as O, toHandlerKey as R, toDisplayString as D, isVNode as y } from "vue";
import { Props as H, TABS_PROPS_KEY as U } from "./index3.js";
import { useList as Y } from "../../_hooks/use-list/index.js";
import { isBoolean as q, isObject as G, isArray as d } from "../../_utils/is/index.js";
const J = { class: "f-tabs__head" }, Q = {
  key: 0,
  class: "f-tabs__prefix"
}, W = { class: "f-tabs__navs" }, X = {
  key: 1,
  class: "f-tabs__suffix"
}, Z = { class: "f-tabs__body" }, ee = "FTabsItem";
var re = /* @__PURE__ */ M({
  name: "FTabs",
  __name: "tabs",
  props: /* @__PURE__ */ T(H, {
    modelValue: {
      default: null,
      type: [Number, String]
    },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(v) {
    const i = v, u = E(v, "modelValue"), { classes: g, styles: N } = Y(i, "tabs"), a = P(0), p = /* @__PURE__ */ new Map(), o = x(), c = (e) => {
      const s = d(e) ? e : [e], n = [];
      return s.forEach((t) => {
        d(t) ? n.push(...c(t)) : y(t) && d(t.children) ? n.push(...c(t.children)) : y(t) && t.component && n.push(t);
      }), n;
    }, C = (e, s) => e.subTree ? c(e.subTree.children).filter(
      (t) => G(t.type) && t.type.name === s
    ) : [], S = F(), V = (e) => {
      p.set(e.uid, e);
      const n = C(S, ee).map((t) => t.component ? t.component.uid : null).filter(Boolean);
      if (o.value = n.map((t) => p.get(t)).filter(Boolean), u.value) {
        a.value = u.value;
        return;
      }
      o.value && o.value.length && o.value[0].activeName && (a.value = o.value[0].activeName);
    }, k = _(() => o.value && o.value.map((e, s) => (e.activeName = e.activeName || s, {
      // name 如果没有传递 则用索引代替
      name: e.activeName,
      label: e.label
    })));
    j(U, {
      activeName: a,
      registerChild: V
    });
    const B = async (e) => {
      let s = !0;
      i.onSwitch && (s = await i.onSwitch(e)), !(q(s) && !s) && (a.value = e, u.value = e);
    }, $ = g(["position", "type"], "f-tabs"), w = N(["justifyContent"]), L = _(() => i.trigger === "hover" ? "mouseenter" : "click");
    return (e, s) => (r(), l("div", {
      role: "tab",
      class: z(b($)),
      style: A(b(w))
    }, [
      f("div", J, [
        e.$slots.prefix ? (r(), l("div", Q, [
          m(e.$slots, "prefix")
        ])) : h("", !0),
        f("div", W, [
          (r(!0), l(I, null, K(k.value, (n, t) => (r(), l("div", O({
            key: t,
            class: [
              "f-tabs__nav-item",
              { "f-tabs__nav-active": n.name === a.value }
            ]
          }, {
            [R(L.value)]: (te) => B(n.name)
          }), D(n.label), 17))), 128))
        ]),
        e.$slots.suffix ? (r(), l("div", X, [
          m(e.$slots, "suffix")
        ])) : h("", !0)
      ]),
      f("div", Z, [
        m(e.$slots, "default")
      ])
    ], 6));
  }
});
export {
  re as default
};
