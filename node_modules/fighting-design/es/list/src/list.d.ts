import type { FightingSize } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    readonly zebra: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly center: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly textColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly borderColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly size: {
        readonly type: PropType<FightingSize>;
        readonly default: FightingSize;
        readonly validator?: ((value: FightingSize) => boolean) | undefined;
    };
    readonly maxHeight: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly zebraColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly zebra: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly center: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly textColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly borderColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly size: {
        readonly type: PropType<FightingSize>;
        readonly default: FightingSize;
        readonly validator?: ((value: FightingSize) => boolean) | undefined;
    };
    readonly maxHeight: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly zebraColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}>>, {
    readonly size: FightingSize;
    readonly center: boolean;
    readonly borderColor: string;
    readonly zebra: boolean;
    readonly textColor: string;
    readonly maxHeight: string | number;
    readonly zebraColor: string;
}, {}>;
export default _sfc_main;
