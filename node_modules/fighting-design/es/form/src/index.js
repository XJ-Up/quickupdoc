import { defineComponent as a, provide as c, reactive as f, toRefs as p, openBlock as i, createElementBlock as d, renderSlot as k, createCommentVNode as _ } from "vue";
import { Props as R, FORM_PROVIDE_KEY as h } from "./index3.js";
import { useFormCheck as v } from "../../_hooks/use-form-check/index.js";
import { useRun as C } from "../../_hooks/use-run/index.js";
var D = /* @__PURE__ */ a({
  name: "FForm",
  __name: "form",
  props: R,
  setup(s, { expose: l }) {
    const e = s, { run: u } = C(), { childrenCheckResult: r, validate: t } = v(e), m = (o) => {
      o.preventDefault();
      const n = e.model ? t() : !0;
      u(e.onSubmit, n, e.model, r, o);
    };
    return c(
      h,
      f({
        ...p(e),
        childrenCheckResult: r
      })
    ), l({ submit: m, validate: t }), (o, n) => o.$slots.default ? (i(), d("form", {
      key: 0,
      role: "form",
      class: "f-form",
      onsubmit: m
    }, [
      k(o.$slots, "default")
    ])) : _("", !0);
  }
});
export {
  D as default
};
