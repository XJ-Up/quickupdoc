import type { LabelPosition, FormSubmit } from './src/interface';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import Form from "./src/form";
export declare const FForm: Install<DefineComponent<{
    readonly model: {
        readonly type: PropType<object>;
        readonly default: () => object | null;
    };
    readonly labelWidth: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly labelPosition: {
        readonly type: PropType<LabelPosition>;
        readonly default: LabelPosition;
        readonly validator?: ((value: LabelPosition) => boolean) | undefined;
    };
    readonly onSubmit: {
        readonly type: PropType<FormSubmit>;
        readonly default: FormSubmit | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly model: {
        readonly type: PropType<object>;
        readonly default: () => object | null;
    };
    readonly labelWidth: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly labelPosition: {
        readonly type: PropType<LabelPosition>;
        readonly default: LabelPosition;
        readonly validator?: ((value: LabelPosition) => boolean) | undefined;
    };
    readonly onSubmit: {
        readonly type: PropType<FormSubmit>;
        readonly default: FormSubmit | null;
    };
}>>, {
    readonly model: object;
    readonly labelWidth: string | number;
    readonly labelPosition: LabelPosition;
    readonly onSubmit: FormSubmit;
}, {}>>;
/** form 组件实例类型 */
export type FormInstance = InstanceType<typeof Form>;
export * from './src/interface';
export default FForm;
