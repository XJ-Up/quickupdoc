import { defineComponent as y, ref as _, unref as r, openBlock as o, createElementBlock as i, normalizeClass as u, normalizeStyle as l, createElementVNode as a, renderSlot as h, toDisplayString as k } from "vue";
import { Props as b } from "./index3.js";
import { useLoadImg as v } from "../../_hooks/use-load-img/index.js";
import { useList as S } from "../../_hooks/use-list/index.js";
const E = ["referrer-policy", "draggable", "alt", "title"], L = {
  key: 1,
  class: "f-image__error"
}, w = { class: "f-image__error-text" };
var P = /* @__PURE__ */ y({
  name: "FImage",
  __name: "image",
  props: b,
  setup(m) {
    const s = m, t = _(), { classes: n, styles: c } = S(s, "image"), { isSuccess: g, isShowNode: d } = v(t, s), f = n(["fit", "select", "block"], "f-image"), p = c(["width", "height", "round"]);
    return (e, z) => r(g) ? (o(), i("div", {
      key: 0,
      role: "img",
      class: u(r(f)),
      style: l(r(p))
    }, [
      a("img", {
        ref_key: "imageEl",
        ref: t,
        class: "f-image__img",
        src: "",
        style: l(r(d) ? "" : "visibility: hidden"),
        "referrer-policy": e.referrerPolicy,
        draggable: e.draggable,
        alt: e.alt,
        title: e.title
      }, null, 12, E)
    ], 6)) : (o(), i("div", L, [
      h(e.$slots, "error", {}, () => [
        a("div", w, k(e.alt || "加载失败"), 1)
      ])
    ]));
  }
});
export {
  P as default
};
