import { defineComponent as m, computed as d, openBlock as v, createBlock as u, Transition as E, unref as e, withCtx as L, withDirectives as A, createElementVNode as B, renderSlot as _, vShow as h } from "vue";
import { Props as C } from "./index3.js";
import { useCollapseAnimation as w } from "../../_hooks/use-collapse-animation/index.js";
const k = { class: "f-collapse-animation" };
var F = /* @__PURE__ */ m({
  name: "FCollapseAnimation",
  __name: "collapse-animation",
  props: C,
  setup(n) {
    const o = n, { onBeforeEnter: t, onEnter: r, onAfterEnter: a, onBeforeLeave: s, onLeave: i, onAfterLeave: f } = w(o), p = o.opened, l = d(() => o.disabled ? p : o.opened);
    return (c, x) => (v(), u(E, {
      onBeforeEnter: e(t),
      onEnter: e(r),
      onAfterEnter: e(a),
      onBeforeLeave: e(s),
      onLeave: e(i),
      onAfterLeave: e(f)
    }, {
      default: L(() => [
        A(B("div", k, [
          _(c.$slots, "default")
        ], 512), [
          [h, l.value]
        ])
      ]),
      _: 3
    }, 8, ["onBeforeEnter", "onEnter", "onAfterEnter", "onBeforeLeave", "onLeave", "onAfterLeave"]));
  }
});
export {
  F as default
};
