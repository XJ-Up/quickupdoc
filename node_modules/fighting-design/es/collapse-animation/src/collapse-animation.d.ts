import type { DialogCallback } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
/**
 * 旧版本
 *
 * @see collapse-animation https://github.com/FightingDesign/fighting-design/tree/474f6f19c2b034d5f2839c110e02b8987af24a9a/packages/fighting-design/collapse-animation
 */
declare const _sfc_main: DefineComponent<{
    readonly opened: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly heightAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly widthAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly animationTime: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly onOpen: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onClose: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onOpenEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onCloseEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly opened: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly heightAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly widthAnimation: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly animationTime: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly onOpen: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onClose: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onOpenEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
    readonly onCloseEnd: {
        readonly type: PropType<DialogCallback>;
        readonly default: DialogCallback | null;
    };
}>>, {
    readonly onClose: DialogCallback;
    readonly disabled: boolean;
    readonly onOpen: DialogCallback;
    readonly opened: boolean;
    readonly heightAnimation: boolean;
    readonly widthAnimation: boolean;
    readonly animationTime: number;
    readonly onOpenEnd: DialogCallback;
    readonly onCloseEnd: DialogCallback;
}, {}>;
export default _sfc_main;
