import { defineComponent as $, mergeModels as F, useModel as D, reactive as H, ref as d, watch as I, resolveComponent as B, openBlock as u, createElementBlock as f, createVNode as c, unref as r, withCtx as m, createElementVNode as l, Fragment as y, renderList as b, normalizeClass as w, withModifiers as S, toDisplayString as N, createTextVNode as z, nextTick as E } from "vue";
import { Props as L } from "./index3.js";
import { FInput as P } from "../../input/index.js";
import { FTrigger as q } from "../../trigger/index.js";
import x from "../../_svg/f-icon-clock-time/index.js";
import { addZero as n } from "../../_utils/utils/index.js";
import { isString as U, isBoolean as Z } from "../../_utils/is/index.js";
const j = { class: "f-time-picker" }, A = { class: "f-time-picker__content" }, G = ["onClick"], J = ["onClick"], K = ["onClick"], O = { class: "f-time-picker__option" };
var oe = /* @__PURE__ */ $({
  name: "FTimePicker",
  __name: "time-picker",
  props: /* @__PURE__ */ F(L, {
    time: { default: "", type: String },
    timeModifiers: {}
  }),
  emits: ["update:time"],
  setup(T) {
    const p = D(T, "time"), _ = /* @__PURE__ */ new Date(), i = H({
      hour: n(_.getHours()),
      minute: n(_.getMinutes()),
      second: n(_.getSeconds())
    }), M = d(), k = (o, t = !0) => {
      if (t && !U(t) && (p.value = `${i.hour}:${i.minute}:${i.second}`), t === "now") {
        const s = /* @__PURE__ */ new Date();
        i.hour = n(s.getHours()), i.minute = n(s.getMinutes()), i.second = n(s.getSeconds());
      }
      Z(t) && M.value.close(o);
    }, v = d(), g = d(), a = d(), h = (o, t) => {
      o.scrollTo({ top: t, behavior: "smooth" });
    }, V = async () => {
      if (await E(), v.value && g.value && a.value) {
        const o = a.value.querySelector(".f-time-picker__second-item").offsetHeight;
        h(
          v.value,
          (Number(i.hour) === 0 ? 24 : Number(i.hour) - 2) * o
        ), h(g.value, (Number(i.minute) - 2) * o), h(a.value, (Number(i.second) - 2) * o);
      }
    }, C = (o, t) => {
      i[t] = n(o);
    };
    return I(
      () => i,
      V,
      /** 需要深度监视对象 */
      { deep: !0 }
    ), (o, t) => {
      const s = B("f-button");
      return u(), f("div", j, [
        c(r(q), {
          ref_key: "triggerInstance",
          ref: M,
          trigger: "click",
          disabled: o.disabled,
          "on-open": V
        }, {
          content: m(() => [
            l("div", A, [
              l("div", {
                ref_key: "hoverRef",
                ref: v,
                class: "f-time-picker__hour"
              }, [
                (u(), f(y, null, b(24, (e) => l("div", {
                  key: e,
                  class: w([
                    "f-time-picker__hour-item",
                    {
                      "f-time-picker__hour-active": r(n)(e === 24 ? 0 : e).toString() === i.hour
                    }
                  ]),
                  onClick: S((R) => C(e === 24 ? 0 : e, "hour"), ["stop"])
                }, N(r(n)(e === 24 ? 0 : e)), 11, G)), 64))
              ], 512),
              l("div", {
                ref_key: "minuteRef",
                ref: g,
                class: "f-time-picker__minute"
              }, [
                (u(), f(y, null, b(59, (e) => l("div", {
                  key: e,
                  class: w([
                    "f-time-picker__minute-item",
                    {
                      "f-time-picker__minute-active": r(n)(e).toString() === i.minute
                    }
                  ]),
                  onClick: S((R) => C(e, "minute"), ["stop"])
                }, N(r(n)(e)), 11, J)), 64))
              ], 512),
              l("div", {
                ref_key: "secondRef",
                ref: a,
                class: "f-time-picker__second"
              }, [
                (u(), f(y, null, b(59, (e) => l("div", {
                  key: e,
                  class: w([
                    "f-time-picker__second-item",
                    {
                      "f-time-picker__second-active": r(n)(e).toString() === i.second
                    }
                  ]),
                  onClick: S((R) => C(e, "second"), ["stop"])
                }, N(r(n)(e)), 11, K)), 64))
              ], 512)
            ]),
            l("div", O, [
              c(s, {
                size: "mini",
                onClick: t[1] || (t[1] = (e) => k(e, "now"))
              }, {
                default: m(() => [
                  z("当前")
                ]),
                _: 1
              }),
              c(s, {
                size: "mini",
                onClick: t[2] || (t[2] = (e) => k(e, !1))
              }, {
                default: m(() => [
                  z("取消")
                ]),
                _: 1
              }),
              c(s, {
                type: "primary",
                size: "mini",
                onClick: t[3] || (t[3] = (e) => k(e, !0))
              }, {
                default: m(() => [
                  z(" 确定 ")
                ]),
                _: 1
              })
            ])
          ]),
          default: m(() => [
            c(r(P), {
              modelValue: p.value,
              "onUpdate:modelValue": t[0] || (t[0] = (e) => p.value = e),
              autocomplete: "off",
              type: "text",
              placeholder: o.placeholder || "请选择时间",
              disabled: o.disabled,
              size: o.size,
              clear: o.clear,
              "after-icon": r(x)
            }, null, 8, ["modelValue", "placeholder", "disabled", "size", "clear", "after-icon"])
          ]),
          _: 1
        }, 8, ["disabled"])
      ]);
    };
  }
});
export {
  oe as default
};
