import { defineComponent as N, inject as R, ref as $, computed as c, resolveComponent as _, openBlock as t, createElementBlock as s, createElementVNode as f, normalizeClass as v, normalizeStyle as B, unref as i, createBlock as a, createCommentVNode as r, toDisplayString as P, renderSlot as b, createVNode as V, withCtx as h, Fragment as j, renderList as w } from "vue";
import { Props as L } from "./index3.js";
import { FSvgIcon as k } from "../../../svg-icon/index.js";
import { TREE_PROPS_KEY as O } from "../../src/index3.js";
import { FCheckbox as T } from "../../../checkbox/index.js";
import D from "../../../_svg/f-icon-chevron-right/index.js";
import { isNumber as K } from "../../../_utils/is/index.js";
import { useRun as Y } from "../../../_hooks/use-run/index.js";
const q = { class: "f-tree-item" }, A = { class: "f-tree-item__label-prefix" }, G = { class: "f-tree-item__text" }, H = {
  key: 0,
  class: "f-tree-item__label-option"
}, J = {
  key: 0,
  class: "f-tree-item__children"
};
var oe = /* @__PURE__ */ N({
  name: "FTreeItem",
  __name: "index",
  props: L,
  setup(C) {
    const m = C, { run: y } = Y(), o = R(O, null), l = $(!1), u = c(() => !!(m.model.children && m.model.children.length)), g = (e, n) => {
      n.disabled || (l.value = !l.value, o && y(o.onClickLabel, e, n, l.value, o.tree));
    }, F = c(() => o && K(o.offset) && o.offset > 1 ? o.offset : 40), S = c(() => {
      const { __level: e } = m.model;
      return e ? { "--tree-item-level-padding": `${e * F.value}px` } : {};
    });
    return (e, n) => {
      var p;
      const z = _("f-tree-item"), E = _("f-collapse-animation");
      return t(), s("div", q, [
        f("div", {
          class: v([
            "f-tree-item__label",
            {
              "f-tree-item__label-disabled": e.model.disabled
            }
          ]),
          style: B(S.value),
          onClick: n[0] || (n[0] = (d) => g(d, e.model))
        }, [
          f("div", A, [
            (p = i(o)) != null && p.isCheck ? (t(), a(i(T), {
              key: 0,
              label: e.model.value || e.model.label,
              disabled: e.model.disabled,
              "show-label": !1
            }, null, 8, ["label", "disabled"])) : r("", !0),
            u.value ? (t(), a(i(k), {
              key: 1,
              class: v({ "f-tree-item__icon-animation": l.value }),
              size: 15,
              icon: i(D)
            }, null, 8, ["class", "icon"])) : r("", !0),
            e.model.icon ? (t(), a(i(k), {
              key: 2,
              size: 15,
              icon: e.model.icon
            }, null, 8, ["icon"])) : r("", !0),
            f("div", G, P(e.model.label), 1)
          ]),
          e.$slots.options ? (t(), s("div", H, [
            b(e.$slots, "options")
          ])) : r("", !0)
        ], 6),
        V(E, {
          opened: l.value,
          "animation-time": 0.3
        }, {
          default: h(() => [
            u.value ? (t(), s("div", J, [
              (t(!0), s(j, null, w(e.model.children, (d, I) => (t(), a(z, {
                key: I,
                model: d
              }, {
                options: h(() => [
                  b(e.$slots, "options")
                ]),
                _: 2
              }, 1032, ["model"]))), 128))
            ])) : r("", !0)
          ]),
          _: 3
        }, 8, ["opened"])
      ]);
    };
  }
});
export {
  oe as default
};
