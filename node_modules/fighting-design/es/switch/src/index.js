import { defineComponent as y, mergeModels as z, useModel as k, openBlock as i, createElementBlock as n, normalizeClass as t, normalizeStyle as C, unref as l, toDisplayString as r, createCommentVNode as a, createElementVNode as m, createBlock as u } from "vue";
import { Props as V } from "./index3.js";
import { FSvgIcon as d } from "../../svg-icon/index.js";
import S from "../../_svg/f-icon-loading-a/index.js";
import { useGlobal as B } from "../../_hooks/use-global/index.js";
import { useList as b } from "../../_hooks/use-list/index.js";
import { useRun as T } from "../../_hooks/use-run/index.js";
var A = /* @__PURE__ */ y({
  name: "FSwitch",
  __name: "switch",
  props: /* @__PURE__ */ z(V, {
    modelValue: { type: Boolean, default: !1, type: Boolean },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(c) {
    const s = c, o = k(c, "modelValue"), { run: f } = T(), { getProp: p } = B(s), { styles: h, classes: v } = b(p(["size"]), "switch"), w = () => {
      s.disabled || s.loading || (o.value = !o.value, f(s.onChange, !s.modelValue));
    }, g = h(["closeColor", "activeColor"]), _ = v(["size", "square"], "f-switch__input");
    return (e, F) => (i(), n("div", {
      role: "switch",
      class: t(["f-switch", { "f-switch__disabled": e.disabled || e.loading }]),
      style: C(l(g))
    }, [
      e.closeText ? (i(), n("span", {
        key: 0,
        class: t(["f-switch__right-text", { "f-switch__text-active": !o.value }])
      }, r(e.closeText), 3)) : a("", !0),
      m("div", {
        class: t([l(_), { "f-switch__active": o.value }]),
        onClick: w
      }, [
        m("span", {
          class: t(["f-switch__roll", { "f-switch__roll-active": o.value }])
        }, [
          e.icon && !e.loading ? (i(), u(l(d), {
            key: 0,
            icon: e.icon,
            size: e.iconSize
          }, null, 8, ["icon", "size"])) : a("", !0),
          e.loading ? (i(), u(l(d), {
            key: 1,
            class: "f-switch__loading-animation",
            icon: l(S),
            size: e.iconSize
          }, null, 8, ["icon", "size"])) : a("", !0)
        ], 2)
      ], 2),
      e.activeText ? (i(), n("span", {
        key: 1,
        class: t(["f-switch__left-text", { "f-switch__text-active": o.value }])
      }, r(e.activeText), 3)) : a("", !0)
    ], 6));
  }
});
export {
  A as default
};
