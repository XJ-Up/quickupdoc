import type { PropType, ExtractPropTypes } from 'vue';
import type { FightingSize, FightingIcon, HandleChange } from '../../_interface';
export declare const Props: {
    /** 绑定值 */
    readonly modelValue: {
        readonly required: true;
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 尺寸
     *
     * @values large middle small mini
     */
    readonly size: {
        readonly type: PropType<FightingSize>;
        readonly default: FightingSize;
        readonly validator?: ((value: FightingSize) => boolean) | undefined;
    };
    /** 是否禁用 */
    readonly disabled: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否loading */
    readonly loading: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义 icon */
    readonly icon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 关闭时的颜色 */
    readonly closeColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 打开时的颜色 */
    readonly activeColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义打开时的文案 */
    readonly activeText: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义关闭时的文案 */
    readonly closeText: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否为方形的 */
    readonly square: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义 icon size */
    readonly iconSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 绑定值发生改变时触发的回调 */
    readonly onChange: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
};
/** switch 组件 props 类型 */
export type SwitchProps = ExtractPropTypes<typeof Props>;
