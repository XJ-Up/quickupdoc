import { defineComponent as u, ref as d, openBlock as y, createElementBlock as _, normalizeStyle as v, unref as R, renderSlot as k, toRefs as C, reactive as b } from "vue";
import { Props as g } from "./index3.js";
import { useGlobal as h } from "../../_hooks/use-global/index.js";
import { useList as B } from "../../_hooks/use-list/index.js";
import { useRipples as O } from "../../_hooks/use-ripples/index.js";
var F = /* @__PURE__ */ u({
  name: "FRipple",
  __name: "ripple",
  props: g,
  setup(r) {
    const e = r, { getType: l, getProp: s } = h(e), { styles: i } = B(s(["type"], ["default"]), "ripple"), t = d(), n = i(["startOpacity", "endOpacity"], !1), a = (o) => {
      if (e.disabled)
        return;
      const { ripplesColor: p, duration: c } = C(e), f = b({
        duration: c.value,
        component: "f-ripple",
        className: "f-ripple__animation",
        type: l(),
        ripplesColor: p.value
      });
      if (t.value) {
        const { runRipples: m } = O(o, t.value, f);
        m();
      }
    };
    return (o, p) => (y(), _("div", {
      ref_key: "rippleRef",
      ref: t,
      class: "f-ripple",
      style: v(R(n)),
      onClick: a
    }, [
      k(o.$slots, "default")
    ], 4));
  }
});
export {
  F as default
};
