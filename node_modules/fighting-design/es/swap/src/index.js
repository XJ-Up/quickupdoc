import { defineComponent as i, mergeModels as c, useModel as u, openBlock as p, createElementBlock as d, normalizeClass as f, unref as a, createVNode as V } from "vue";
import { Props as v } from "./index3.js";
import { FSvgIcon as w } from "../../svg-icon/index.js";
import { useList as C } from "../../_hooks/use-list/index.js";
import { useRun as h } from "../../_hooks/use-run/index.js";
var F = /* @__PURE__ */ i({
  name: "FSwap",
  __name: "swap",
  props: /* @__PURE__ */ c(v, {
    modelValue: { type: Boolean, default: !1, type: Boolean },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(s) {
    const o = s, l = u(s, "modelValue"), { run: n } = h(), { classes: t } = C(o, "swap"), r = (e) => {
      l.value = !l.value, n(o.onChange, !o.modelValue, e);
    }, m = t(["type", "modelValue"], "f-swap");
    return (e, k) => (p(), d("div", {
      role: "switch",
      class: f(a(m)),
      onClick: r
    }, [
      V(a(w), {
        icon: l.value ? e.iconOn : e.iconOff,
        size: e.size
      }, null, 8, ["icon", "size"])
    ], 2));
  }
});
export {
  F as default
};
