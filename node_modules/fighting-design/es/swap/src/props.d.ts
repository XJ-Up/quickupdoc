import type { PropType, ExtractPropTypes } from 'vue';
import type { SwapType, SwapChange } from './interface';
import type { FightingIcon } from '../../_interface';
export declare const Props: {
    /** 绑定值 */
    readonly modelValue: {
        readonly require: true;
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 组件尺寸 */
    readonly size: {
        readonly type: PropType<string | number>;
        readonly default: 40 | undefined;
    };
    /**
     * 动画类型
     *
     * @values sound swap
     */
    readonly type: {
        readonly type: PropType<SwapType>;
        readonly default: SwapType;
        readonly validator?: ((value: SwapType) => boolean) | undefined;
    };
    /** 打开展示的图标 */
    readonly iconOn: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 关闭展示的图标 */
    readonly iconOff: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 当绑定值发生改变时触发的回调 */
    readonly onChange: {
        readonly type: PropType<SwapChange>;
        readonly default: SwapChange | null;
    };
};
/** swap 组件 props 类型 */
export type SwapProps = ExtractPropTypes<typeof Props>;
