import { ref as d } from "vue";
import { PAGINATION_ITEM as h, PAGINATION_PREV as m, PAGINATION_NEXT as v } from "../../_tokens/key/index.js";
import { useRun as b } from "../use-run/index.js";
const T = (e, u, c, i) => {
  const { run: s } = b(), f = (a) => {
    const t = Math.ceil(e.total / Number(a));
    e.current > t && (u.currentModelValue.value = t), u.pageSizeModelValue.value = Number(a);
  }, g = (a, t) => {
    e.disabled || (u.currentModelValue.value = a, s(e.onChange, a, e.pageSize, t));
  }, l = d("1");
  return {
    jumpCurrent: l,
    selectChange: f,
    handelChange: g,
    handleInput: () => {
      e.disabled || (Number(l.value) > c.value.length && (l.value = String(c.value.length)), u.currentModelValue.value = Number(l.value));
    },
    handelClick: (a) => {
      if (e.disabled)
        return;
      const t = a.target;
      if (t.className.includes(h)) {
        let n = Number(t.textContent);
        const o = e.pagerCount, r = e.current, N = o - 2;
        t.className.includes(m) && (n = r - N), t.className.includes(v) && (n = r + N), Number.isNaN(n) || (n < 1 && (n = 1), n > i.value && (n = i.value)), n !== r && (u.currentModelValue.value = n, s(e.onChange, n, e.pageSize, a));
      }
    }
  };
};
export {
  T as useTurnPage
};
