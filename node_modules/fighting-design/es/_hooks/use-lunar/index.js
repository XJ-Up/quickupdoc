import { SOLAR_CALENDAR_FESTIVE as T, LUNAR_FESTIVE as N, SOLAR_TERM as O, LUNAR_INFO as D, SOLAR_TERM_LIST as U, DATE_CHANG_LUNAR_CALENDAR as d, CONVERT_DIGIT_CHINES as k } from "./src/index.js";
const x = () => {
  const b = (e) => {
    let t, o = 348;
    for (t = 32768; t > 8; t >>= 1)
      o += D[e - 1900] & t ? 1 : 0;
    return o + A(e);
  }, I = (e) => D[e - 1900] & 15, A = (e) => I(e) ? D[e - 1900] & 65536 ? 30 : 29 : 0, S = (e, t) => t > 12 || t < 1 ? -1 : D[e - 1900] & 65536 >> t ? 30 : 29, C = (e, t) => {
    const o = "魔羯水瓶双鱼白羊金牛双子巨蟹狮子处女天秤天蝎射手魔羯", n = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];
    return o.substr(e * 2 - (t < n[e - 1] ? 2 : 0), 2) + "座";
  }, h = (e, t) => {
    if (e < 1900 || e > 2100 || t < 1 || t > 24)
      return -1;
    const o = U[e - 1900], n = [];
    for (let s = 0; s < o.length; s += 5) {
      const a = parseInt("0x" + o.substr(s, 5)).toString();
      n.push(a[0], a.substr(1, 2), a[3], a.substr(4, 2));
    }
    return parseInt(n[t - 1]);
  }, m = (e) => {
    let t;
    switch (e) {
      case 10:
        t = "初十";
        break;
      case 20:
        t = "二十";
        break;
      case 30:
        t = "三十";
        break;
      default:
        t = d[Math.floor(e / 10)], t += k[e % 10];
    }
    return t;
  };
  return (e, t, o) => {
    let n = parseInt(e.toString()), s = parseInt(t.toString()), a = parseInt(o.toString());
    if (n < 1900 || n > 2100 || n === 1900 && s === 1 && a < 31)
      return -1;
    let i;
    n ? i = new Date(n, parseInt(s.toString()) - 1, a) : i = /* @__PURE__ */ new Date();
    let r, c = 0, u = 0;
    n = i.getFullYear(), s = i.getMonth() + 1, a = i.getDate();
    let l = (Date.UTC(i.getFullYear(), i.getMonth(), i.getDate()) - Date.UTC(1900, 0, 31)) / 864e5;
    for (r = 1900; r < 2101 && l > 0; r++)
      u = b(r), l -= u;
    l < 0 && (l += u, r--), i.getDay();
    const g = r;
    c = I(r);
    let f = !1;
    for (r = 1; r < 13 && l > 0; r++)
      c > 0 && r === c + 1 && f === !1 ? (--r, f = !0, u = A(g)) : u = S(g, r), f === !0 && r === c + 1 && (f = !1), l -= u;
    l === 0 && c > 0 && r === c + 1 && (f ? f = !1 : (f = !0, --r)), l < 0 && (l += u, --r);
    const p = r, L = l + 1, F = h(n, s * 2);
    let E = "";
    F === a && (E = O[s * 2 - 1]);
    const M = C(s, a), R = s + "-" + a;
    let _ = p + "-" + L;
    return p === 12 && L === 29 && S(g, p) === 29 && (_ = "12-30"), {
      /** 阳历节日 */
      festival: T[R] ? T[R].title : "",
      /** 农历节日 */
      lunarFestival: N[_] ? N[_].title : "",
      /** 农历日期 */
      lunar: m(L),
      /** 节气 */
      term: E,
      /** 星座 */
      constellation: M
    };
  };
};
export {
  x as useLunar
};
