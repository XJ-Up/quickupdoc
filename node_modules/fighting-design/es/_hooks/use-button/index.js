import { useSlots as h, inject as g, computed as e } from "vue";
import { BUTTON_GROUP_PROPS_KEY as v } from "../../button-group/src/index.js";
import { useGlobal as z } from "../use-global/index.js";
import { useColor as S } from "../use-color/index.js";
import { sizeChange as r } from "../../_utils/utils/index.js";
const P = (t) => {
  const o = h(), { getType: u, getSize: b } = z(t), f = g(v, null), i = e(
    () => !(o.default && o.default() && o.default()[0].children)
  ), _ = e(() => [
    "f-button",
    `f-button__${b("middle", f).value}`,
    {
      [`f-button__${u().value}`]: !t.color && u().value,
      "f-button__icon": i,
      "f-button__round": t.round,
      "f-button__simple": t.simple && !t.color,
      "f-button__block": t.block,
      "f-button__bold": t.bold,
      "f-button__text": t.text && !t.color,
      "f-button__circle": t.circle,
      "f-button__spread": t.spread
    }
  ]), a = e(() => {
    const { color: n, fontColor: l, shadow: c, fontSize: s } = t;
    if (t.color) {
      const { getLight: d, getDark: m } = S(t.color);
      return {
        "--button-background": n || null,
        "--button-hover": n ? d(0.4) : null,
        "--button-active": n ? m(0.2) : null,
        "--button-color": l,
        "--button-shadow": c,
        "--button-font-size": r(s)
      };
    }
    return {
      "--button-color": l,
      "--button-shadow": c,
      "--button-font-size": r(s)
    };
  });
  return {
    classList: _,
    style: a
  };
};
export {
  P as useButton
};
