import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import Box from "./src/box";
export declare const FBox: Install<DefineComponent<{
    readonly role: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly padding: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly height: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly display: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly role: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly padding: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly height: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly display: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}>>, {
    readonly background: string;
    readonly width: string | number;
    readonly padding: string | number;
    readonly height: string | number;
    readonly role: string;
    readonly display: string;
}, {}>>;
/** box 组件实例类型 */
export type BoxInstance = InstanceType<typeof Box>;
export * from './src/interface';
export default FBox;
