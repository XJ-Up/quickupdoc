import { defineComponent as k, ref as C, computed as L, openBlock as a, createElementBlock as s, normalizeClass as i, unref as u, normalizeStyle as d, Fragment as E, renderList as I, toDisplayString as S, createCommentVNode as p } from "vue";
import { Props as b } from "./index3.js";
import { isArray as w, isString as z, isObject as A } from "../../_utils/is/index.js";
import { warning as B } from "../../_utils/tips/index.js";
import { useList as F } from "../../_hooks/use-list/index.js";
import { useRun as j } from "../../_hooks/use-run/index.js";
const D = ["onClick"], N = {
  key: 0,
  class: "f-expand-card__title"
};
var G = /* @__PURE__ */ k({
  name: "FExpandCard",
  __name: "expand-card",
  props: b,
  setup(m) {
    const n = m, { classes: f, styles: _ } = F(n, "expand-card"), { run: x } = j(), c = C(n.expandIndex), g = (t, r, e) => {
      c.value = r, x(n.onChange, t, r, e);
    }, l = L(() => {
      const { imageList: t } = n;
      return w(t) ? t.map(
        (r) => z(r) ? { url: r } : A(r) && r.url ? r : { url: "" }
      ) : (B("f-expand-card", "`image-list` is not a array."), []);
    }), y = f(["round", "vertical"], "f-expand-card"), v = _(["width", "height", "color"]);
    return (t, r) => l.value.length ? (a(), s("div", {
      key: 0,
      class: i(u(y)),
      style: d(u(v))
    }, [
      (a(!0), s(E, null, I(l.value, (e, o) => (a(), s("div", {
        key: o,
        class: i([
          "f-expand-card__item",
          { "f-expand-card__active": o === c.value }
        ]),
        style: d({ backgroundImage: `url(${e.url})` }),
        onClick: (h) => g(h, o, e)
      }, [
        e.text ? (a(), s("div", N, S(e.text), 1)) : p("", !0)
      ], 14, D))), 128))
    ], 6)) : p("", !0);
  }
});
export {
  G as default
};
