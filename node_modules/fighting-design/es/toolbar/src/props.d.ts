import type { PropType, ExtractPropTypes } from 'vue';
import type { ToolbarClick } from './interface';
import type { FightingSize } from '../../_interface';
export declare const Props: {
    /** 显示为圆角 */
    readonly round: {
        readonly type: BooleanConstructor;
        /** 自定义背景颜色 */
        readonly default: boolean;
    };
    /**
     * 尺寸
     *
     * @values large middle small mini
     * @default middle
     */
    readonly size: {
        readonly type: PropType<FightingSize>;
        readonly default: FightingSize;
        readonly validator?: ((value: FightingSize) => boolean) | undefined;
    };
    /** 自定义背景颜色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 字体颜色 */
    readonly textColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否固定定位 */
    readonly fixed: {
        readonly type: BooleanConstructor;
        /** 自定义背景颜色 */
        readonly default: boolean;
    };
    /** 自定义宽度 */
    readonly width: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 自定义高度 */
    readonly height: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 点击之后触发的回调 */
    readonly onClick: {
        readonly type: PropType<ToolbarClick>;
        readonly default: ToolbarClick | null;
    };
};
/** toolbar 组件 props 类型 */
export type ToolbarProps = ExtractPropTypes<typeof Props>;
