import { defineComponent as u, computed as t, provide as a, reactive as l, renderSlot as c } from "vue";
import { Props as m, FIGHTING_GLOBAL_PROPS_KEY as d } from "./index.js";
import { FIGHTING_TYPE as f, FIGHTING_SIZE as _ } from "../../_tokens/attrs/index.js";
import { useProps as g } from "../../_hooks/use-props/index.js";
var F = /* @__PURE__ */ u({
  name: "FFightingGlobal",
  __name: "fighting-global",
  props: m,
  setup(n) {
    const e = n, { interceptors: r } = g(e), o = t(() => r(
      "type",
      () => f.includes(e.type),
      "default"
    )), i = t(() => r(
      "size",
      () => _.includes(e.size),
      "middle"
    )), s = t(() => r(
      "lang",
      () => ["en-US", "zh-CN"].includes(e.lang),
      "zh-CN"
    ));
    return a(
      d,
      l({
        type: o.value,
        size: i.value,
        lang: s.value
      })
    ), (p, G) => c(p.$slots, "default");
  }
});
export {
  F as default
};
