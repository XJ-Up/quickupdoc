import { defineComponent as f, computed as d, useSlots as p, openBlock as t, createElementBlock as r, normalizeClass as k, unref as o, normalizeStyle as y, Fragment as _, renderList as v, renderSlot as w } from "vue";
import { Props as S } from "./index3.js";
import { isNumber as z } from "../../_utils/is/index.js";
import { useList as L } from "../../_hooks/use-list/index.js";
var h = /* @__PURE__ */ f({
  name: "FSkeleton",
  __name: "skeleton",
  props: S,
  setup(n) {
    const e = n, { classes: l, styles: a } = L(e, "skeleton"), i = l(
      [
        "round",
        "animated",
        "size",
        {
          key: "difference",
          callback: () => e.difference && z(e.rows) && e.rows >= 3
        }
      ],
      "f-skeleton"
    ), c = a(["rowGap"]), u = d(() => p().default ? e.loading === !0 : !0);
    return (s, b) => u.value ? (t(), r("div", {
      key: 0,
      role: "section",
      class: k(o(i)),
      style: y(o(c))
    }, [
      (t(!0), r(_, null, v(s.rows, (m) => (t(), r("div", {
        key: m,
        class: "f-skeleton__item"
      }))), 128))
    ], 6)) : w(s.$slots, "default", { key: 1 });
  }
});
export {
  h as default
};
