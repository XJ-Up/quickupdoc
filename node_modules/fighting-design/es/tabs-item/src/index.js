import { defineComponent as m, getCurrentInstance as u, ref as v, inject as p, reactive as f, computed as o, onMounted as d, withDirectives as _, openBlock as b, createElementBlock as C, normalizeClass as N, renderSlot as h, vShow as S, createCommentVNode as k } from "vue";
import { Props as B } from "./index3.js";
import { TABS_PROPS_KEY as I } from "../../tabs/src/index3.js";
var y = /* @__PURE__ */ m({
  name: "FTabsItem",
  __name: "tabs-item",
  props: B,
  setup(i) {
    const t = i, s = u(), a = v(t.name), e = p(I, null), r = f({
      activeName: a,
      uid: s.uid,
      label: t.label
    }), c = o(() => e ? e.activeName.value === a.value ? !0 : !t.lazy : !1), n = o(() => e ? e.activeName.value === r.activeName : !1);
    return d(() => {
      e && e.registerChild(r);
    }), (l, P) => c.value ? _((b(), C("div", {
      key: 0,
      class: N(["f-tabs-item", { "f-tabs-item__active": n.value }]),
      role: "tabpanel"
    }, [
      h(l.$slots, "default")
    ], 2)), [
      [S, n.value]
    ]) : k("", !0);
  }
});
export {
  y as default
};
