import { defineComponent as L, ref as S, provide as T, openBlock as n, createElementBlock as R, normalizeClass as a, unref as e, createElementVNode as r, renderSlot as l, createBlock as h, Teleport as y, createVNode as B, Transition as C, withCtx as w, withDirectives as G, normalizeStyle as A, vShow as k } from "vue";
import { Props as N, TRIGGER_CLOSE_KEY as I } from "./index3.js";
import { useTrigger as O } from "../../_hooks/use-trigger/index.js";
import { TRIGGER_CONTENT_BOX_CLASS as b, TRIGGER_CLASS as x } from "../../_tokens/key/index2.js";
import { useList as z } from "../../_hooks/use-list/index.js";
const V = { class: "f-trigger__content" };
var Y = /* @__PURE__ */ L({
  name: "FTrigger",
  __name: "trigger",
  props: N,
  setup(c, { expose: f }) {
    const t = c, o = S(), { classes: g, styles: m } = z(t, "trigger"), { visible: _, styleList: p, close: s, onBeforeEnter: d, onAfterLeave: v } = O(
      t,
      o
    ), E = g(["arrow"], b), u = m(["width"]);
    return T(I, { close: s }), f({ close: s }), (i, $) => (n(), R("div", {
      class: a(e(x))
    }, [
      r("div", {
        ref_key: "triggerRef",
        ref: o,
        class: "f-trigger__trigger"
      }, [
        l(i.$slots, "default")
      ], 512),
      (n(), h(y, { to: "body" }, [
        B(C, {
          name: "f-trigger",
          onBeforeEnter: e(d),
          onAfterLeave: e(v)
        }, {
          default: w(() => [
            G(r("div", {
              class: a(e(E)),
              style: A([e(p), e(u)])
            }, [
              r("div", V, [
                l(i.$slots, "content")
              ])
            ], 6), [
              [k, e(_)]
            ])
          ]),
          _: 3
        }, 8, ["onBeforeEnter", "onAfterLeave"])
      ]))
    ], 2));
  }
});
export {
  Y as default
};
