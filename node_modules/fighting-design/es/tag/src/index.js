import { defineComponent as y, openBlock as n, createBlock as r, Transition as g, withCtx as b, createElementVNode as z, normalizeClass as I, unref as e, normalizeStyle as v, createCommentVNode as t, renderSlot as B } from "vue";
import { Props as F } from "./index3.js";
import { FSvgIcon as a } from "../../svg-icon/index.js";
import { FCloseBtn as S } from "../../close-btn/index.js";
import { useGlobal as N } from "../../_hooks/use-global/index.js";
import { useList as P } from "../../_hooks/use-list/index.js";
import { useRun as T } from "../../_hooks/use-run/index.js";
var $ = /* @__PURE__ */ y({
  name: "FTag",
  __name: "tag",
  props: F,
  setup(i) {
    const s = i, { getProp: c } = N(s), { run: m } = T(), { classes: p, styles: f } = P(c(["size", "type"]), "tag"), u = p(["simple", "type", "size", "block", "round", "line"], "f-tag"), d = f(["color", "background"]), k = (o) => {
      m(s.onClose, o);
    };
    return (o, l) => (n(), r(g, {
      name: "f-tag",
      appear: ""
    }, {
      default: b(() => [
        z("div", {
          class: I(e(u)),
          style: v(e(d)),
          onClick: l[0] || (l[0] = //@ts-ignore
          (...C) => o.onClick && o.onClick(...C))
        }, [
          o.beforeIcon ? (n(), r(e(a), {
            key: 0,
            icon: o.beforeIcon
          }, null, 8, ["icon"])) : t("", !0),
          B(o.$slots, "default"),
          o.afterIcon ? (n(), r(e(a), {
            key: 1,
            icon: o.afterIcon
          }, null, 8, ["icon"])) : t("", !0),
          o.close ? (n(), r(e(S), {
            key: 2,
            size: 14,
            "on-click": k
          })) : t("", !0)
        ], 6)
      ]),
      _: 3
    }));
  }
});
export {
  $ as default
};
