import { defineComponent as h, ref as k, onMounted as E, onUnmounted as g, openBlock as w, createBlock as S, Transition as y, withCtx as L, withDirectives as T, createElementVNode as _, normalizeClass as C, unref as a, normalizeStyle as x, withModifiers as z, renderSlot as H, vShow as N, toRefs as B } from "vue";
import { Props as q } from "./index3.js";
import { error as n } from "../../_utils/tips/index.js";
import { debounce as I } from "../../_utils/utils/index.js";
import { isString as u, isNumber as M } from "../../_utils/is/index.js";
import { useList as D } from "../../_hooks/use-list/index.js";
var j = /* @__PURE__ */ h({
  name: "FBackTop",
  __name: "back-top",
  props: q,
  setup(d) {
    const t = d, { styles: m, classes: p } = D(t, "back-top"), i = k(!1), l = (e) => I(() => {
      const o = (e || document.documentElement).scrollTop, s = M(t.visibleHeight) ? t.visibleHeight : 200;
      i.value = o > s;
    }, 200), c = l(), f = () => {
      const { top: e, behavior: o, listenEl: s } = B(t);
      if (u(t.listenEl)) {
        const r = document.querySelector(s.value);
        if (!r) {
          n("f-back-top", "`listen-el` is not a element");
          return;
        }
        r && r.scrollTo({ top: e.value, behavior: o.value });
        return;
      } else
        n("f-back-top", "`listen-el` attributes is not a string");
      window && window.scrollTo({ top: e.value, behavior: o.value });
    };
    E(() => {
      if (t.listenEl) {
        if (!u(t.listenEl)) {
          n("f-back-top", "`listen-el` attributes is not a string"), document.addEventListener("scroll", l());
          return;
        }
        const e = document.querySelector(t.listenEl);
        if (!e) {
          n("f-back-top", "`listen-el` is not a element");
          return;
        }
        e && e.addEventListener("scroll", l(e));
      } else
        document.addEventListener("scroll", c);
    }), g(() => {
      document.removeEventListener("scroll", c);
    });
    const v = m(["right", "bottom", "background", "color", "zIndex"], "zIndex"), b = p(["round"], "f-back-top");
    return (e, o) => (w(), S(y, { name: "f-back-top" }, {
      default: L(() => [
        T(_("div", {
          class: C(a(b)),
          style: x(a(v)),
          onClick: z(f, ["stop"])
        }, [
          H(e.$slots, "default")
        ], 6), [
          [N, i.value]
        ])
      ]),
      _: 3
    }));
  }
});
export {
  j as default
};
