import type { BackTopBehavior } from './src/interface';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
import type { Install } from '../_utils';
import BackTop from "./src/back-top";
export declare const FBackTop: Install<DefineComponent<{
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly behavior: {
        readonly type: PropType<BackTopBehavior>;
        readonly default: BackTopBehavior;
        readonly validator?: ((value: BackTopBehavior) => boolean) | undefined;
    };
    readonly visibleHeight: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly right: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly bottom: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly zIndex: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly top: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly listenEl: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly behavior: {
        readonly type: PropType<BackTopBehavior>;
        readonly default: BackTopBehavior;
        readonly validator?: ((value: BackTopBehavior) => boolean) | undefined;
    };
    readonly visibleHeight: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly right: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly bottom: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly zIndex: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly top: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly listenEl: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}>>, {
    readonly round: boolean;
    readonly background: string;
    readonly color: string;
    readonly behavior: BackTopBehavior;
    readonly visibleHeight: number;
    readonly right: string | number;
    readonly bottom: string | number;
    readonly zIndex: number;
    readonly top: number;
    readonly listenEl: string;
}, {}>>;
/** back-top 组件实例类型 */
export type BackTopInstance = InstanceType<typeof BackTop>;
export * from './src/interface';
export default FBackTop;
