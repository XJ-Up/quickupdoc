import type { FightingType } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    readonly value: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly max: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly dot: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly show: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly value: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly max: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    readonly dot: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly show: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
}>>, {
    readonly type: FightingType;
    readonly background: string;
    readonly color: string;
    readonly value: string | number;
    readonly max: number;
    readonly dot: boolean;
    readonly show: boolean;
}, {}>;
export default _sfc_main;
