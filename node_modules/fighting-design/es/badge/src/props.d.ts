import type { PropType, ExtractPropTypes } from 'vue';
import type { FightingType } from '../../_interface';
export declare const Props: {
    /** 显示值 */
    readonly value: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** value 为数字时的最大值，超出显示为 value+ */
    readonly max: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    /** 展示为一个点 */
    readonly dot: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否显示 */
    readonly show: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /**
     * 类型
     *
     * @values default primary success danger warning info
     * @default danger
     */
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    /** 自定义颜色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义文字颜色 */
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
};
/** badge 组件 props 类型 */
export type BadgeProps = ExtractPropTypes<typeof Props>;
