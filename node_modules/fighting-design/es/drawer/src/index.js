import { defineComponent as M, mergeModels as V, useModel as g, openBlock as s, createBlock as p, Teleport as z, createVNode as u, Transition as _, unref as o, withCtx as d, withDirectives as w, createElementVNode as t, normalizeClass as A, normalizeStyle as O, createElementBlock as a, createCommentVNode as r, withModifiers as S, renderSlot as n, toDisplayString as T, vShow as h } from "vue";
import { Props as D } from "./index3.js";
import { FCloseBtn as N } from "../../close-btn/index.js";
import { useList as F } from "../../_hooks/use-list/index.js";
import { useVisible as H } from "../../_hooks/use-visible/index.js";
import { useTransition as P } from "../../_hooks/use-transition/index.js";
const j = {
  key: 0,
  class: "f-drawer__mask"
}, q = { class: "f-drawer__container" }, G = {
  key: 0,
  class: "f-drawer__header"
}, J = { class: "f-drawer__header-title" }, K = {
  key: 1,
  class: "f-drawer__body"
}, Q = {
  key: 2,
  class: "f-drawer__footer"
};
var x = /* @__PURE__ */ M({
  name: "FDrawer",
  __name: "drawer",
  props: /* @__PURE__ */ V(D, {
    visible: { type: Boolean, default: !1, type: Boolean },
    visibleModifiers: {}
  }),
  emits: ["update:visible"],
  setup(f) {
    const l = f, i = g(f, "visible"), { styles: k, classes: v } = F(l, "drawer"), { closeVisible: y, maskClose: c } = H(l, i), { handleOpen: B, handleOpenEnd: b, handleClose: C, handleCloseEnd: E } = P(l), L = k(
      ["width", "zIndex", "maskBackground", "maskOpacity"],
      ["zIndex", "maskOpacity"]
    ), $ = v(["fullscreen", "maskBlur", "direction"], "f-drawer");
    return (e, m) => (s(), p(z, {
      to: "body",
      disabled: !e.appendToBody
    }, [
      u(_, {
        name: "f-drawer__trans",
        onBeforeEnter: o(B),
        onAfterEnter: o(b),
        onBeforeLeave: o(C),
        onAfterLeave: o(E)
      }, {
        default: d(() => [
          w(t("div", {
            role: "dialog",
            "aria-modal": "true",
            tabindex: "-1",
            class: A(o($)),
            style: O(o(L))
          }, [
            e.showMask ? (s(), a("div", j)) : r("", !0),
            t("div", {
              class: "f-drawer__wrapper",
              onClick: m[0] || (m[0] = S(
                //@ts-ignore
                (...I) => o(c) && o(c)(...I),
                ["self"]
              ))
            }, [
              u(_, { name: "f-drawer__container-trans" }, {
                default: d(() => [
                  w(t("div", q, [
                    e.showHeader ? (s(), a("header", G, [
                      n(e.$slots, "header", {}, () => [
                        t("span", J, T(e.title), 1),
                        e.showCloseIcon ? (s(), p(o(N), {
                          key: 0,
                          icon: e.closeIcon,
                          "on-click": o(y)
                        }, {
                          default: d(() => [
                            n(e.$slots, "closeIcon")
                          ]),
                          _: 3
                        }, 8, ["icon", "on-click"])) : r("", !0)
                      ])
                    ])) : r("", !0),
                    e.$slots.default ? (s(), a("section", K, [
                      n(e.$slots, "default")
                    ])) : r("", !0),
                    e.$slots.footer ? (s(), a("footer", Q, [
                      n(e.$slots, "footer")
                    ])) : r("", !0)
                  ], 512), [
                    [h, i.value]
                  ])
                ]),
                _: 3
              })
            ])
          ], 6), [
            [h, i.value]
          ])
        ]),
        _: 3
      }, 8, ["onBeforeEnter", "onAfterEnter", "onBeforeLeave", "onAfterLeave"])
    ], 8, ["disabled"]));
  }
});
export {
  x as default
};
