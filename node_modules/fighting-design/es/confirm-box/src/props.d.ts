import type { PropType, ExtractPropTypes } from 'vue';
import type { HandleMouse, HandleChange } from '../../_interface';
export declare const Props: {
    /** 是否展示 */
    readonly show: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 标题内容 */
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 提示内容 */
    readonly content: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 确认按钮文字 */
    readonly confirmText: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 取消按钮的文字内容 */
    readonly cancelText: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 点击确定执行的回调方法 */
    readonly onConfirm: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    /** 点击取消执行的回调方法 */
    readonly onCancel: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    /** 关闭之后执行的回调 */
    readonly onClose: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    /** 开启之后执行的回调 */
    readonly onOpen: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
};
/** confirm box 组件 props 类型 */
export type ConfirmBoxProps = ExtractPropTypes<typeof Props>;
