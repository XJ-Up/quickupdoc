import type { HandleMouse, HandleChange } from '../..';
import type { DefineComponent, PropType, ComponentOptionsMixin, PublicProps, ExtractPropTypes } from 'vue';
declare const _sfc_main: DefineComponent<{
    readonly show: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly content: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly confirmText: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly cancelText: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly onConfirm: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    readonly onCancel: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    readonly onClose: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    readonly onOpen: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {}, string, PublicProps, Readonly<ExtractPropTypes<{
    readonly show: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly content: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    readonly confirmText: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly cancelText: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    readonly onConfirm: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    readonly onCancel: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
    readonly onClose: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
    readonly onOpen: {
        readonly type: PropType<HandleChange>;
        readonly default: HandleChange | null;
    };
}>>, {
    readonly title: string;
    readonly onClose: HandleChange;
    readonly show: boolean;
    readonly content: string;
    readonly onOpen: HandleChange;
    readonly confirmText: string | number;
    readonly cancelText: string | number;
    readonly onConfirm: HandleMouse;
    readonly onCancel: HandleMouse;
}, {}>;
export default _sfc_main;
