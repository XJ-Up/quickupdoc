import type { PropType, ExtractPropTypes } from 'vue';
import type { HandleMouse, FightingType, FightingIcon } from '../../_interface';
export declare const Props: {
    /**
     * 类型
     *
     * @values default primary success danger warning info
     * @default undefined
     */
    readonly type: {
        readonly type: PropType<FightingType>;
        readonly default: FightingType;
        readonly validator?: ((value: FightingType) => boolean) | undefined;
    };
    /** 文字大小 */
    readonly fontSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** title 大小 */
    readonly titleSize: {
        readonly type: PropType<string | number>;
        readonly default: string | number | undefined;
    };
    /** 是否加粗 */
    readonly bold: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否居中 */
    readonly center: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否可关闭 */
    readonly close: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 是否为简约的 */
    readonly simple: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义标题 */
    readonly title: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否为圆角 */
    readonly round: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义背景色 */
    readonly background: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义颜色 */
    readonly color: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 自定义 title 颜色 */
    readonly titleColor: {
        readonly type: PropType<string>;
        readonly default: string;
        readonly validator?: ((value: string) => boolean) | undefined;
    };
    /** 是否为固定定位 */
    readonly fixed: {
        readonly type: BooleanConstructor;
        readonly default: boolean;
    };
    /** 自定义关闭 icon */
    readonly closeIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 自定义之前的 icon */
    readonly beforeIcon: {
        readonly type: PropType<FightingIcon>;
        readonly default: () => FightingIcon | null;
    };
    /** 滚动列表 */
    readonly alertList: {
        readonly type: PropType<string[]>;
        readonly default: () => string[] | null;
    };
    /** 滚动列表动画间隔 */
    readonly duration: {
        readonly type: NumberConstructor;
        readonly default: number | undefined;
    };
    /** 点击关闭之后执行的回调 */
    readonly onClose: {
        readonly type: PropType<HandleMouse>;
        readonly default: HandleMouse | null;
    };
};
/** alert 组件 props 类型 */
export type AlertProps = ExtractPropTypes<typeof Props>;
