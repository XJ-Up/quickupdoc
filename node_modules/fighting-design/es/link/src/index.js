import { defineComponent as d, openBlock as n, createElementBlock as y, normalizeClass as z, unref as r, normalizeStyle as C, createElementVNode as h, createBlock as s, createCommentVNode as t, renderSlot as b } from "vue";
import { Props as g } from "./index3.js";
import { FSvgIcon as l } from "../../svg-icon/index.js";
import { useGlobal as I } from "../../_hooks/use-global/index.js";
import { useList as v } from "../../_hooks/use-list/index.js";
import { useRun as L } from "../../_hooks/use-run/index.js";
const B = ["href", "target"];
var G = /* @__PURE__ */ d({
  name: "FLink",
  __name: "link",
  props: g,
  setup(i) {
    const o = i, { getProp: a } = I(o), { run: c } = L(), { classes: m, styles: f } = v(a(["type"], ["primary"]), "link"), p = (e) => {
      if (o.disabled || o.noLink) {
        e.preventDefault();
        return;
      }
      c(o.onClick, e);
    }, u = m(["type", "state", "disabled", "noCopy"], "f-link"), k = f(["size", "color", "hoverColor"]);
    return (e, S) => (n(), y("div", {
      role: "link",
      class: z(r(u)),
      style: C(r(k))
    }, [
      h("a", {
        class: "f-link__a",
        href: e.href,
        target: e.target,
        onClick: p
      }, [
        e.beforeIcon ? (n(), s(r(l), {
          key: 0,
          icon: e.beforeIcon,
          size: e.size
        }, null, 8, ["icon", "size"])) : t("", !0),
        b(e.$slots, "default"),
        e.afterIcon ? (n(), s(r(l), {
          key: 1,
          icon: e.afterIcon,
          size: e.size
        }, null, 8, ["icon", "size"])) : t("", !0)
      ], 8, B)
    ], 6));
  }
});
export {
  G as default
};
