import { defineComponent as y, mergeModels as C, useModel as _, ref as h, resolveComponent as V, openBlock as F, createElementBlock as w, createVNode as l, unref as i, withCtx as s, createElementVNode as Y, isRef as z, createTextVNode as D } from "vue";
import { Props as Z } from "./index3.js";
import { FInput as I } from "../../input/index.js";
import { FTrigger as E } from "../../trigger/index.js";
import { FCalendar as N } from "../../calendar/index.js";
import { addZero as c } from "../../_utils/utils/index.js";
import R from "../../_svg/f-icon-calendar/index.js";
import { warning as B } from "../../_utils/tips/index.js";
const P = { class: "f-date-picker" }, S = { class: "f-date-picker__content" }, T = { class: "f-date-picker__option" };
var K = /* @__PURE__ */ y({
  name: "FDatePicker",
  __name: "date-picker",
  props: /* @__PURE__ */ C(Z, {
    date: {
      default: "",
      type: String
    },
    dateModifiers: {}
  }),
  emits: ["update:date"],
  setup(m) {
    const n = m, f = _(m, "date"), r = /* @__PURE__ */ new Date(), p = h(), M = r.getFullYear(), u = r.getMonth() + 1, g = r.getDate(), d = {
      YYYY: M + "",
      MM: n.addZero ? c(u) : u + "",
      DD: n.addZero ? c(g) : g + ""
    }, v = () => {
      const t = RegExp(/([Y]{4})|([M]{2})|([D]{2})/);
      let e = n.format;
      t.test(e) || (B(
        "f-date-picker",
        "`format` is not a standard format, default format will be used"
      ), e = "YYYY/MM/DD");
      for (const o in d)
        e = e.replace(
          o,
          d[o].toString()
        );
      f.value = e;
    }, b = (t, e, o) => {
      d.YYYY = t + "", d.MM = n.addZero ? c(e) : e + "", d.DD = n.addZero ? c(o) : o + "";
    }, k = (t, e) => {
      p.value.close(t), e && v();
    };
    return (t, e) => {
      const o = V("f-button");
      return F(), w("div", P, [
        l(i(E), {
          ref_key: "triggerInstance",
          ref: p,
          trigger: "click",
          disabled: t.disabled
        }, {
          content: s(() => [
            Y("div", S, [
              l(i(N), {
                date: i(r),
                "onUpdate:date": e[1] || (e[1] = (a) => z(r) ? r.value = a : null),
                "day-cell-height": 42,
                "week-cell-height": 42,
                "on-change": b
              }, null, 8, ["date"]),
              Y("div", T, [
                l(o, {
                  size: "mini",
                  onClick: e[2] || (e[2] = (a) => k(a, !1))
                }, {
                  default: s(() => [
                    D("取消")
                  ]),
                  _: 1
                }),
                l(o, {
                  type: "primary",
                  size: "mini",
                  onClick: e[3] || (e[3] = (a) => k(a, !0))
                }, {
                  default: s(() => [
                    D(" 确定 ")
                  ]),
                  _: 1
                })
              ])
            ])
          ]),
          default: s(() => [
            l(i(I), {
              modelValue: f.value,
              "onUpdate:modelValue": e[0] || (e[0] = (a) => f.value = a),
              autocomplete: "off",
              readonly: "",
              disabled: t.disabled,
              placeholder: t.placeholder || "请选择日期",
              clear: t.clear,
              size: t.size,
              "after-icon": i(R)
            }, null, 8, ["modelValue", "disabled", "placeholder", "clear", "size", "after-icon"])
          ]),
          _: 1
        }, 8, ["disabled"])
      ]);
    };
  }
});
export {
  K as default
};
