import { defineComponent as p, mergeModels as i, useModel as d, provide as f, reactive as g, toRefs as b, openBlock as h, createElementBlock as k, normalizeClass as y, unref as t, normalizeStyle as C, renderSlot as x } from "vue";
import { Props as _, CHECKBOX_GROUP_PROPS_KEY as v } from "./index3.js";
import { useList as B } from "../../_hooks/use-list/index.js";
import { useRun as G } from "../../_hooks/use-run/index.js";
var E = /* @__PURE__ */ p({
  name: "FCheckboxGroup",
  __name: "checkbox-group",
  props: /* @__PURE__ */ i(_, {
    modelValue: { type: Boolean, default: [], type: [Boolean, Array, String, Number] },
    modelModifiers: {}
  }),
  emits: ["update:modelValue"],
  setup(r) {
    const o = r, s = d(r, "modelValue"), { run: l } = G(), { classes: a, styles: n } = B(o, "checkbox-group"), c = (e) => {
      s.value = e, l(o.onChange, e);
    };
    f(
      v,
      g({
        ...b(o),
        setChange: c
      })
    );
    const u = n(["columnGap", "rowGap"]), m = a(["background", "vertical", "size"], "f-checkbox-group");
    return (e, P) => (h(), k("div", {
      role: "group",
      "aria-label": "checkbox-group",
      class: y(t(m)),
      style: C(t(u))
    }, [
      x(e.$slots, "default")
    ], 6));
  }
});
export {
  E as default
};
