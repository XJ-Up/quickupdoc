import { defineComponent as k, computed as x, watch as y, openBlock as S, createElementBlock as m, toDisplayString as F, createCommentVNode as P, renderSlot as g, normalizeProps as B, guardReactiveProps as R, unref as $ } from "vue";
import { Props as f } from "./index3.js";
import { useCountDown as z } from "../../_hooks/use-count-down/index.js";
import { useRun as A } from "../../_hooks/use-run/index.js";
const E = { class: "f-count-down" }, N = {
  key: 0,
  class: "f-count-down__text"
};
var q = /* @__PURE__ */ k({
  name: "FCountDown",
  __name: "count-down",
  props: f,
  setup(_, { expose: h }) {
    const s = _, { run: v } = A(), { start: u, pause: D, reset: d, current: i } = z({
      time: +s.time,
      millisecond: s.millisecond,
      interval: +s.interval,
      onFinish: () => {
        v(s.onFinish);
      }
    }), w = (e, l) => {
      const { days: p } = l;
      let { hours: c, minutes: o, seconds: r, milliseconds: a } = l;
      const n = (t, H = 2) => (t + "").padStart(H, "0");
      if (e.includes("DD") ? e = e.replace("DD", n(p)) : c += p * 24, e.includes("HH") ? e = e.replace("HH", n(c)) : o += c * 60, e.includes("mm") ? e = e.replace("mm", n(o)) : r += o * 60, e.includes("ss") ? e = e.replace("ss", n(r)) : a += r * 1e3, e.includes("S")) {
        const t = n(a, 3);
        e.includes("SSS") ? e = e.replace("SSS", t) : e.includes("SS") ? e = e.replace("SS", t.slice(0, 2)) : e = e.replace("S", t.charAt(0));
      }
      return e;
    }, C = x(() => w(s.format, i.value));
    return y(
      () => s.time,
      () => {
        d(+s.time), s.autoStart && u();
      },
      { immediate: !0 }
    ), h({ current: i, start: u, pause: D, reset: d }), (e, l) => (S(), m("div", E, [
      e.$slots.default ? P("", !0) : (S(), m("span", N, F(C.value), 1)),
      g(e.$slots, "default", B(R($(i))))
    ]));
  }
});
export {
  q as default
};
