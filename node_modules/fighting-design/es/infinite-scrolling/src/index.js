import { defineComponent as s, ref as l, onMounted as c, openBlock as f, createElementBlock as a, renderSlot as d, createElementVNode as m } from "vue";
import { Props as p } from "./index3.js";
import { sizeChange as u } from "../../_utils/utils/index.js";
import { useRun as g } from "../../_hooks/use-run/index.js";
const _ = { class: "f-infinite-scrolling" };
var I = /* @__PURE__ */ s({
  name: "FInfiniteScrolling",
  __name: "infinite-scrolling",
  props: p,
  setup(r) {
    const o = r, { run: i } = g(), e = l(), t = () => new IntersectionObserver(
      /**
       * @param { Array } arr 观察的元素数组
       */
      (n) => {
        n[0].isIntersecting && i(o.onScrollEnd);
      },
      { rootMargin: u(o.distance) }
    );
    return c(() => {
      e.value && t().observe(e.value);
    }), (n, v) => (f(), a("div", _, [
      d(n.$slots, "default"),
      m("div", {
        ref_key: "loadingRef",
        ref: e,
        class: "f-infinite-scrolling__loading"
      }, "加载中...", 512)
    ]));
  }
});
export {
  I as default
};
