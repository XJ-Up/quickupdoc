import { FIGHTING_SIZE as n, FIGHTING_TARGET as i, FIGHTING_TYPE as s } from "../../_tokens/attrs/index.js";
import { setBooleanProp as o, setStringNumberProp as l, setStringProp as e, setObjectProp as t, setFunctionProp as p } from "../../_utils/props/index.js";
const d = {
  /** 是否加粗 */
  bold: o(),
  /** 是否为圆形 */
  circle: o(),
  /** 是否为圆角 */
  round: o(),
  /** 是否带有扩散效果 */
  spread: o(),
  /** 文字大小 */
  fontSize: l(),
  /** 字体颜色 */
  fontColor: e(),
  /**
   * 按钮尺寸
   *
   * @values large middle small mini
   */
  size: e(void 0, (r) => n.includes(r)),
  /** 是否为块级元素 */
  block: o(),
  /** 跳转的连接地址 */
  href: e(),
  /**
   * 针对 href 处理的跳转方式
   *
   * 原生属性
   *
   * @values _blank _self _parent _top
   * @default _self
   * @see target https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a#attr-target
   */
  target: e("_self", (r) => i.includes(r)),
  /** 是否为 loading 状态 */
  loading: o(),
  /** 是否禁用 */
  disabled: o(),
  /** 自定义 loading icon */
  loadingIcon: t(),
  /**
   * 按钮的类型（非自定义按钮颜色时有效）
   *
   * @values default primary success danger warning info
   */
  type: e(void 0, (r) => s.includes(r)),
  /** 是否自动获取焦点 */
  autofocus: o(),
  /**
   * 原生 name 属性
   *
   * @see name https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button#attr-name
   */
  name: e("f-button"),
  /** 自定义阴影样式 */
  shadow: e(),
  /** 是否为文字按钮（非自定义按钮颜色时有效） */
  text: o(),
  /**
   * 原生 type 属性
   *
   * @values button submit reset
   * @default button
   * @see type https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button#attr-type
   */
  nativeType: e("button", (r) => ["button", "submit", "reset"].includes(r)),
  /** 是否为简约的按钮（非自定义按钮颜色时有效） */
  simple: o(),
  /** 自定义之前的 icon */
  beforeIcon: t(),
  /** 自定义之后的 icon */
  afterIcon: t(),
  /** 是否为涟漪效果 */
  ripples: o(),
  /** 自定义涟漪效果颜色 */
  ripplesColor: e(),
  /** 自定义按钮颜色 */
  color: e(),
  /** 点击之后的回调函数 */
  onClick: p()
};
export {
  d as Props
};
